---
- name: Create contrast data directory ({{ teamserver_contrast_datadir }}
  file: 
    path: "{{ teamserver_contrast_datadir }}"
    state: directory 
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"

- name: Create contents of contrast data directory ({{ teamserver_contrast_datadir }}
  file: 
    path: "{{ teamserver_contrast_datadir }}/{{ item }}"
    state: directory 
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"
    mode: 0770
  with_items:
    - conf
    - logs
    - data/rulepack
    - saml
    - bin
    - cache
    - libraries
    - agents
    - agents/contrast-service
    - agents/contrast-service/linux
    - agents/contrast-service/win
    - agents/contrast-service/mac
    - agents/java
    - agents/dotnet
    - agents/dotnet-core
    - agents/node
    - agents/ruby/agent
    - agents/ruby/service
    - agents/python
    - esapi

# This license will need to be pulled from the sibling or upstream application server you want to join
# It is important to do three things here:
#  1. grab license that has been encrypted
#  2. grab the key and salt from esapi.properties
#  3. create ansible vault encrypted groupvars file for these properties
#  3. create hidden .contrast file
- name: Creating hidden .contrast file in contrast data directory
  file: 
    path: "{{ teamserver_contrast_datadir }}/.contrast"
    state: touch 
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"

- name: install previously initialized license
  copy: 
    src: "{{ teamserver_license_path }}"
    dest: "{{ teamserver_contrast_datadir }}/contrast.lic"
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"


- name: Copy contrast esapi templates to {{ teamserver_contrast_datadir }}/esapi on target server
  template: 
    src: contrast_esapi_{{ item }} 
    dest: "{{ teamserver_contrast_datadir }}esapi/{{ item }}" 
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"
  with_items:
    - ESAPI.properties
    - validation.properties
    - ValidationMessages.properties
    - ValidationMessages_es.properties
  when: teamserver_update_esapi

- name: Copy contrast conf templates to {{ teamserver_contrast_datadir }}/conf on target server
  template: 
    src: contrast_conf_{{ item }} 
    dest: "{{ teamserver_contrast_datadir }}/conf/{{ item }}"
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"
  with_items:
    - { filename: agent.properties, conditional: "{{ teamserver_update_agent_properties }}" }
    - { filename: auth.properties, conditional: "{{ teamserver_update_auth_properties }}" }
    - { filename: general.properties, conditional: "{{ teamserver_update_general_properties }}" }
    - { filename: hub.properties, conditional: "{{ teamserver_update_hub_properties }}" }
    - { filename: mail.properties, conditional: "{{ teamserver_update_mail_properties }}" }
    - { filename: security.properties, conditional: "{{ teamserver_update_security_properties }}" }
    - { filename: support.properties, conditional: "{{ teamserver_update_support_properties }}" }
    - { filename: features.json, conditional: "{{ teamserver_update_features_json }}" }
    - { filename: head.js, conditional: "{{ teamserver_update_head_js }}" }
    - { filename: footer.html, conditional: "{{ teamserver_update_footer_html }}" }
    - { filename: ardy.properties, conditional: "{{ teamserver_update_ardyproperties }}" }
    - { filename: metrics.properties, conditional: "{{ teamserver_update_metrics_properties }}" }
    - { filename: telemetry.properties, conditional: "{{ teamserver_update_telemetry_properties }}" }
  tags: ['update_teamserver_property_files']

- name: Preinitializing TeamServer
  file: 
    path: "{{ teamserver_contrast_datadir }}/.initialized"
    state: touch 
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"

# - name: Copy encrypted contrast data templates to {{ teamserver_contrast_datadir }} on target server
#   copy: 
#     src: "{{ teamserver_encrypted_properties_folder }}/{{ item }}"
#     dest: "{{ teamserver_contrast_datadir }}/conf/{{ item }}"
#     owner: "{{ teamserver_service_account }}" 
#     group: "{{ teamserver_service_account }}"
#   with_items:
#     - ad.properties
#     - database.properties
#     - ldap.properties
#     - servo.properties
#     - saml.properties
#     - avatar.properties

- name: Update database properties {{ teamserver_contrast_datadir }} on target server
  template: 
    src: contrast_conf_database.properties 
    dest: "{{ teamserver_contrast_datadir }}/conf/database.properties.cleartext"
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"
  when: teamserver_update_database_properties
  tags: ['update_teamserver_property_files']

- name: Update AD properties {{ teamserver_contrast_datadir }} on target server
  template: 
    src: contrast_conf_ad.properties 
    dest: "{{ teamserver_contrast_datadir }}/conf/ad.properties.cleartext"
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"
  when: teamserver_update_ad_properties
  tags: ['update_teamserver_property_files']

- name: Update LDAP properties {{ teamserver_contrast_datadir }} on target server
  template: 
    src: contrast_conf_ldap.properties 
    dest: "{{ teamserver_contrast_datadir }}/conf/ldap.properties.cleartext" 
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"
  when: teamserver_update_ldap_properties
  tags: ['update_teamserver_property_files']

- name: Update servo properties to {{ teamserver_contrast_datadir }} on target server
  template: 
    src: contrast_conf_servo.properties 
    dest: "{{ teamserver_contrast_datadir }}/conf/servo.properties.cleartext"
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"
  when: teamserver_update_servo_properties
  tags: ['update_teamserver_property_files']

- name: Update saml properties to {{ teamserver_contrast_datadir }} on target server
  template: 
    src: contrast_conf_saml.properties 
    dest: "{{ teamserver_contrast_datadir }}/conf/saml.properties.cleartext"
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"
  when: teamserver_update_saml_properties
  tags: ['update_teamserver_property_files']
  
- name: Update avatar properties to {{ teamserver_contrast_datadir }} on target server
  template: 
    src: contrast_conf_avatar.properties 
    dest: "{{ teamserver_contrast_datadir }}/conf/avatar.properties.cleartext"
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"
  when: teamserver_update_saml_properties
  tags: ['update_teamserver_property_files']

- name: Update agent_discovery properties to {{ teamserver_contrast_datadir }} on target server
  template: 
    src: contrast_conf_agent_discovery.properties 
    dest: "{{ teamserver_contrast_datadir }}/conf/agent_discovery.properties.cleartext"
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"
  when: teamserver_update_agent_discovery_properties
  tags: ['update_teamserver_property_files']

- name: Update activemq_connection properties to {{ teamserver_contrast_datadir }} on target server
  template: 
    src: contrast_conf_activemq_connection.properties 
    dest: "{{ teamserver_contrast_datadir }}/conf/activemq_connection.properties.cleartext"
    owner: "{{ teamserver_service_account }}" 
    group: "{{ teamserver_service_account }}"   
  when: teamserver_update_agent_discovery_properties
  tags: ['update_teamserver_property_files']


# - name: Creating a log rotate file to rotate teamserver logs
#   template: 
      # src: contrast_logrotate 
      # dest: /etc/logrotate.d/teamserver 
      # owner: root 
      # group: root

# - name: Creating an autoscaling script for provisioning
#   template: 
      # src: autoscale_script.sh 
      # dest: {{ teamserver_contrast_datadir }}/bin/autoscaling.sh 
      # owner: root 
      # group: root 
      # mode: 0775

# Unnessary if not using SAML
# - name: Copy SAML Keystore the application servers
#   copy: 
#     src: "{{ teamserver_saml_keystore_path }}" 
#     dest: "{{ teamserver_contrast_datadir }}/saml"
#     owner: tomcat 
#     group: tomcat


# - name: Create public web directory
#   file: 
#     path: {{ teamserver_nginx_public_dir }} 
#     state: directory 
#     owner: tomcat 
#     group: tomcat 
#     mode: 0755
#   when: "teamserver_nginx_public_dir is defined"
